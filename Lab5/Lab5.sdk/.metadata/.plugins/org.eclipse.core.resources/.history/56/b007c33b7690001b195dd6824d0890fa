/*
 * led_matrix.h
 *
 *  Created on: Mar 24, 2021
 *      Author: Sebastian
 */

#ifndef SRC_LED_MATRIX_H_
#define SRC_LED_MATRIX_H_

#include <stdio.h>
#include "platform.h"
#include "xparameters.h"
#include "xbram.h"

// Defines
#define RED 0
#define GREEN 1
#define BLUE 2

#define RED_SHIFT 16
#define GREEN_SHIFT 8

#define BYTES_PER_WORD 4

#define NUMBER_OF_COLS 8
#define NUMBER_OF_ROWS 8

// Variables
XBram Bram;
XBram_Config *BramConfigPtr;

u8 pixels[8][8][3];

// Structs
typedef struct position_t {
	u8 x;
	u8 y;
} position_t;

typedef struct color_t {
	u8 red;
	u8 green;
	u8 blue;
} color_t;

enum COLORS {
	RED, YELLOW, PURPLE, GREEN, BLUE, TEAL, WHITE;
};

enum COLOR_RED {red = 255, green = 0, blue = 0};
enum COLOR_YELLOW {red = 255, green = 255, blue = 0};
enum COLOR_PURPLE {red = 255, green = 0, blue = 255};
enum COLOR_GREEN {red = 0, green = 255, blue = 0};
enum COLOR_BLUE {red = 0, green = 0, blue = 255};
enum COLOR_TEAL {red = 0, green = 255, blue = 255};
enum COLOR_WHITE {red = 255, green = 255, blue = 255};

// Functions
u8 initLedMatrix(u8 deviceID);

void ledMatrixOut32(u32 data, u32 addr);

void setPixelValue(u8 x, u8 y, u8 red, u8 green, u8 blue);
void setPixel(position_t pos, color_t col);
void getPixelValue(u8 x, u8 y, u8 *red, u8 *green, u8 *blue);
void getPixel(position_t pos, color_t *col);

void writePixelValueToDevice(u8 x, u8 y);
void writePixelToDevice(position_t pos);
void writePixelValueDirect(u8 x, u8 y, u8 red, u8 green, u8 blue);
void writePixelDirect(position_t pos, color_t col);
void writeAllPixelsToDevice();

void resetAllPixels();


#endif /* SRC_LED_MATRIX_H_ */
